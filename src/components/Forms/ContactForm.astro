---
export const prerender = false;
import Admonition from "@components/Admonition/Admonition.astro";
import Button from "@components/Button/Button.astro";
---

<form
	id="contact-form"
	action="api/send"
	method="post"
	name="contact form"
	class="flex h-full flex-col justify-between gap-4"
>
	<Admonition id="send_success" variant="tip" title="!Recibido!" class="hidden">
		<p>Gracias por embarcar con nosotros en este viaje. Nos pondremos en contacto contigo ‚ù§Ô∏è</p>
	</Admonition>
	<Admonition id="send_error" variant="danger" title="!Ops!" class="hidden">
		<p>
			Parece que no hemos podido enviar tu mensaje. üíî Por favor, int√©ntalo de nuevo. O ponte en
			contacto con nosotros.
		</p>
	</Admonition>
	<input type="hidden" name="form-name" value="contact" />
	<div>
		<label for="contact-name" class="font-heading-1 text-lg uppercase">Nombre completo</label>
		<input type="text" class="form__input" name="name" id="contact-name" placeholder="" required />
	</div>
	<div class="flex flex-col gap-1">
		<label for="contact-email" class="font-heading-1 text-lg uppercase">E-mail </label>
		<input
			type="email"
			pattern="/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/"
			class="form__input"
			name="email"
			id="contact-email"
			inputmode="email"
			placeholder=""
			required
		/>
	</div>
	<div>
		<label for="contact-tel" class="font-heading-1 text-lg uppercase">Tel√©fono de contacto</label>
		<input
			type="tel"
			pattern="[0-9]{9}"
			class="form__input"
			name="telefono"
			id="contact-tel"
			placeholder=""
			required
		/>
	</div>
	<div>
		<label for="contact-asistentes" class="font-heading-1 text-lg uppercase"
			>N√∫mero de asistentes
		</label>
		<input
			type="number"
			class="form__input"
			name="asistentes"
			id="contact-asistentes"
			max="10"
			required
		/>
	</div>
	<div>
		<label class="font-heading-1 text-lg uppercase">¬øAlg√∫n comensal es vegano?</label>
		<div class="mt-2 flex gap-4">
			<label class="inline-flex items-center">
				<input
					type="radio"
					name="hasVegans"
					value="no"
					class="form-radio text-primary-600 border-primary-600 ring-primary-600"
					checked
				/>
				<span class="ml-2">No</span>
			</label>
			<label class="inline-flex items-center">
				<input
					type="radio"
					name="hasVegans"
					value="yes"
					class="form-radio text-primary-600 border-primary-600 ring-primary-600"
				/>
				<span class="ml-2">S√≠</span>
			</label>
		</div>
	</div>
	<div id="vegansField" class="hidden">
		<label for="contact-vegans" class="font-heading-1 text-lg uppercase"
			>N√∫mero de comensales veganos</label
		>
		<input
			type="number"
			name="vegans"
			class="form__input"
			id="contact-vegans"
			min="1"
			max="10"
			placeholder="Indica el n√∫mero de comensales veganos"
		/>
	</div>
	<div>
		<label class="font-heading-1 text-lg uppercase">¬øTienes alguna alergia alimentaria?</label>
		<div class="mt-2 flex gap-4">
			<label class="inline-flex items-center">
				<input
					type="radio"
					name="hasAllergies"
					value="no"
					class="form-radio text-primary-600 border-primary-600 ring-primary-600"
					checked
				/>
				<span class="ml-2">No</span>
			</label>
			<label class="inline-flex items-center">
				<input
					type="radio"
					name="hasAllergies"
					value="yes"
					class="form-radio text-primary-600 border-primary-600 ring-primary-600"
				/>
				<span class="ml-2">S√≠</span>
			</label>
		</div>
	</div>
	<div id="allergiesField" class="hidden">
		<label for="contact-allergies" class="font-heading-1 text-lg uppercase"
			>Especifica tus alergias</label
		>
		<textarea
			name="allergies"
			class="form__input"
			id="contact-allergies"
			rows="3"
			placeholder="Por favor, indica tus alergias alimentarias"></textarea>
	</div>
	<div>
		<div>
			<label for="contact-message" class="font-heading-1 text-lg uppercase"
				>Mensaje para los novios</label
			>
			<textarea
				name="message"
				class="form__input"
				id="contact-message"
				rows="6"
				placeholder="Comparte tus mejores deseos con los novios"
				required></textarea>
		</div>
		<div class="flex">
			<Button variant="primary" type="submit" class="w-full px-10 md:w-fit">Enviar</Button>
		</div>
	</div>
</form>
<script>
	document.addEventListener("DOMContentLoaded", () => {
		// Handle allergies fields
		const allergyRadios = document.querySelectorAll('input[name="hasAllergies"]');
		const allergiesField = document.getElementById("allergiesField");
		const allergiesTextarea = document.getElementById("contact-allergies") as HTMLTextAreaElement;

		allergyRadios.forEach((radio) => {
			radio.addEventListener("change", (e) => {
				if (e.target instanceof HTMLInputElement) {
					allergiesField?.classList.toggle("hidden", e.target.value === "no");
					if (allergiesTextarea) {
						allergiesTextarea.required = e.target.value === "yes";
						allergiesTextarea.value = ""; // Clear textarea when switching options
					}
				}
			});
		});

		// Handle vegans fields
		const veganRadios = document.querySelectorAll('input[name="hasVegans"]');
		const vegansField = document.getElementById("vegansField");
		const vegansInput = document.getElementById("contact-vegans") as HTMLInputElement;

		veganRadios.forEach((radio) => {
			radio.addEventListener("change", (e) => {
				if (e.target instanceof HTMLInputElement) {
					vegansField?.classList.toggle("hidden", e.target.value === "no");
					if (vegansInput) {
						vegansInput.required = e.target.value === "yes";
						vegansInput.value = ""; // Clear input when switching options
					}
				}
			});
		});
	});

	// Form validations
	const form = document.getElementById("contact-form") as HTMLFormElement;
	const asistentesInput = document.getElementById("contact-asistentes") as HTMLInputElement;
	const vegansInput = document.getElementById("contact-vegans") as HTMLInputElement;
	const emailInput = document.getElementById("contact-email") as HTMLInputElement;
	const telInput = document.getElementById("contact-tel") as HTMLInputElement;

	const validateEmail = () => {
		if (emailInput.value && !emailInput.checkValidity()) {
			emailInput.setCustomValidity("Por favor, introduce una direcci√≥n de correo v√°lida");
			return false;
		}
		emailInput.setCustomValidity("");
		return true;
	};

	const validateTel = () => {
		if (telInput.value && !telInput.checkValidity()) {
			telInput.setCustomValidity("Por favor, introduce un n√∫mero de tel√©fono v√°lido");
			return false;
		}
		telInput.setCustomValidity("");
		return true;
	};

	// Validate asistentes and vegans relationship
	const validateVegans = () => {
		if (vegansInput.value && !vegansInput.classList.contains("hidden")) {
			const vegansCount = parseInt(vegansInput.value);
			const asistentesCount = parseInt(asistentesInput.value);

			if (vegansCount > asistentesCount) {
				vegansInput.setCustomValidity(
					"El n√∫mero de comensales veganos no puede ser mayor que el total de asistentes",
				);
				return false;
			}
		}
		vegansInput.setCustomValidity("");
		return true;
	};

	// Form submission handler
	form.addEventListener("submit", (e) => {
		e.preventDefault();

		// Reset custom validations
		form.querySelectorAll("input, textarea").forEach((element) => {
			if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {
				element.setCustomValidity("");
			}
		});

		// Perform custom validations
		let isValid = true;

		// debug validations email and tel
		console.log("email", validateEmail());
		console.log("tel", validateTel());

		// Validate email and tel
		if (!validateEmail() || !validateTel()) {
			isValid = false;
		}

		// Validate vegans count
		if (!validateVegans()) {
			isValid = false;
		}

		// Validate required fields based on radio selections
		const hasVegans = form.querySelector('input[name="hasVegans"]:checked') as HTMLInputElement;
		const hasAllergies = form.querySelector(
			'input[name="hasAllergies"]:checked',
		) as HTMLInputElement;

		if (hasVegans?.value === "yes" && !vegansInput.value) {
			vegansInput.setCustomValidity("Por favor, indica el n√∫mero de comensales veganos");
			isValid = false;
		}

		const allergiesTextarea = document.getElementById("contact-allergies") as HTMLTextAreaElement;
		if (hasAllergies?.value === "yes" && !allergiesTextarea.value.trim()) {
			allergiesTextarea.setCustomValidity("Por favor, especifica las alergias alimentarias");
			isValid = false;
		}

		// Check native form validation
		if (!form.checkValidity() || !isValid) {
			form.reportValidity();
			return;
		}

		// If all validations pass, submit the form
		form.submit();
	});

	// Add real-time validation for vegans count
	asistentesInput.addEventListener("input", validateVegans);
	vegansInput.addEventListener("input", validateVegans);

	// Show success message if URL param is present
	function showMessage() {
		const params = new URLSearchParams(window.location.search);
		const success = params.get("success") === "true";
		const error = params.get("error") === "true";

		if (success) {
			document.getElementById("send_success")?.classList.remove("hidden");
		} else if (error) {
			document.getElementById("send_error")?.classList.remove("hidden");
		}
	}

	// Run the function on page load
	document.addEventListener("DOMContentLoaded", showMessage);
</script>
